Parte de Unity:
Lo primero es buscar un pack de recursos o imagenes que creas que te pueden venir bien para construir al mundo y los personajes, hemos utilizado dos o tres packs que vienen en la UnityAssetStore, que son gratuitos (algunos) y otros los hemos sacado de imagenes de internet con ayuda de gimp para editar dichas imagenes y obtenerlas en el formato adecuado.
Para la creacion de escenarios hemos utilizado una herramienta que existe en unity, llamada "tile palette", esta nos permite, una vez obtenido un pack grafico y hacer un ajuste de imagen, seleccionar piezas de la original y ir haciendo un collage/pintando con los trozos que hemos obtenido.
Para crear una sensacion minima de profundidad, hemos metido varias capas (dentro de unity existe una prioridad a la hora de superponer capas, y como las imagenes son de fondo transparente, si colocas una flor encima del suelo, no tapa el bloque entero si has hecho bien el paso anterior).
En cuanto a los colisionadores, hemos creado otra capa aparte, la cual tiene adherida a cada una de sus piezas, un "box collider" sin la opcion de activar eventos, lo cual, al entrar en contacto con la "box collider" del personaje, impide el movimiento.
Una vez creado un mapa inicial en el que experimentar y ir probando cosas, procedimos a crear al protagonista, esto se hace creando un prefabricable con una imagen multiple (lo cual nos permitira luego animarlo para los diferentes sentidos de movimiento y animaciones extras)
Para crear las animaciones, unity viene con un animador, donde podras crear animaciones independientes (estas se crean como si editases un video, pero insertando imagenes en ciertos puntos y se pueden poner en bucle)
Una vez creadas las animaciones, el siguiente paso era adjuntar un codigo que hiciese que segun lo que el jugador vaya haciendo, se activasen unas u otras, por lo que creamos un archivo C# que definira el comportamiento del personaje, y lo relacionara con el arbol de animacion para que dichas animaciones se ejecuten.
Acabado temporalmente el personaje (ya hacia lo basico), procedimos a darle mas detalle al mapa y ampliarlo un poco ya que solo estaba una zona de pruebas inicial, y se creo el poblado.
En este momento dividimos el trabajo en tres, interacciones con el entorno, diseño de enemigos con una primera version de un administrador de sonido y ampliacion del mapa agregando nuevos biomas y por ultimo un mecanismo de cambio de escena.
Para el diseño de enemigos se busco una imagen con varias "skins" de dicho enemigo y se procedio a hacer algo parecido que con el personaje, con la creacion de un archivo C# destinada a controlar el comportamiento de forma automatica y aleatoria de estos, cada enemigo de forma diferente ya que sino pareceria muy artificial.
Se crearon dos tipos de enemigos, un "slime" y un "treant".
En este momento se creo la version preeliminar del administrador de sonido, pero este no permitia cambiar de canciones debido a algun error, por lo que se dejo de lado una vez se consiguio hacer que al menos sonase una cancion principal.
Mientras tanto, en la parte de interacciones con el entorno se creo una primera version de interaccion con carteles, en la que se podia ir a la entrada del pueblo y al pulsar F delante del cartel, te salia un cartel indicando el nombre del pueblo: "Pueblo paleta", aparte habia un cartel en el inicio recordando errores que habia que arreglar.
Tras varias iteraciones de este sistema, se consiguio hacer funcionar, y este se reutilizaria mas tarde para interactuar con los "npcs".
Una vez acabado el sistema de carteles, se creo a un npc de prueba y se consiguio poder hablar con el tambien, pero este no se movia ni hacia nada, lo cual no es muy emocionante, por lo que mas tarde esto recibiria una mejora.
Volviendo a los enemigos, se empezo a trabajar en una version de prueba de un administrador de vida, tanto para el personaje principal como para los enemigos. Esta primera version hacia que todo muriese (se destruia el objeto) con un solo golpe (al colisionar enemigo y jugador), lo cual no era muy practico.
La segunda iteracion de este sistema ya incluia vida, por lo que ya no se moria de un solo golpe, sin embargo, todavia no estaban hechas ni las animaciones de ataque, ni habia un limitador de como de rapido pueden atacar ambos, jugador y enemigos.
La tercera iteracion del sistema de combate, ya casi la definitiva, incluia un menu personalizable dentro del modo desarrollador en unity (utilizando variables publicas) que permite personalizar el daño y la vida maxima de todos los elementos, pero algo en el codigo del controlador de enemigos debia de funcionar mal, porque los enemigos atacaban de forma extraña (a veces no atacaban, pero otras te pegaban de una sola vez como si te pegasen 2-3).
La ultima interacion y ya la definitiva arreglaba este ultimo problema y ademas incluye una regeneracion pasiva de la vida del personaje, de forma que si te enfrentas a enemigos y quedas malherido, si esperas un tiempo poco a poco te iras curando una cantidad fija de vida.
Mientras que se terminaba dicho sistema, se creo en el poblado varios npcs con los que interactuar, reutilizando el sistema de texto (comportamiento controlado por archivo C#), y se les añadio un archivo C# extra para definir su comportamiento (para que no estuviesen inmobiles), aparte se comenzo a desarrollar un sistema de misiones otorgadas por dichos npcs.
Acabadas ambas partes, se procedio a arreglar el sistema de cambio de escena, ya que al parecer estaba dando muchos errores, se sobreponian los sonidos, se creaban duplicados de varios objetos y ocurrian teletransportes indebidos.
Para evitar la creacion de clones se creo un archivo C#, que se agregaria a los objetos que se deben mantener al cambiar de escena, y se borraron los clones de las otras escenas, ya que eran la causa del error.
Una vez creada esta funcion, se creo una version totalmente nueva del sistema ya que estaba dando problemas arreglarla, y parecia mas simple empezar otra de cero. 
Se crearon varios escenarios para efectuar pruebas (luego se reutilizarian despues de darles unos retoques), las casas del pueblo, la cueva del bosque y la cueva de la zona de la catarata.
La nueva funcion de cambio de escena, definida por su archivo C#, definia un punto de entrada (al entrar en contacto con un colisionador con la opcion de activar eventos), el cual te carga el nuevo mapa, y te lleva a un punto de dicho mapa, definido como variable publica para poder asignarlo manualmente mas tarde (esto lo hace reutilizable, aunque un poco lioso ya que tienes que tener cuidado con los nombres, ya que tienen que ser exactos).
En este momento aparecio un "bug" que era que basicamente, al cambiar de escena el personaje se hacia muy grande, esto se soluciono modificando el valor de la posicion en z de dichos marcadores de cambio de escena, ya que por alguna razon, habian aparecido con valores aleatorios en vez de 0.
Hecho esto se conecto debidamente todos los cambios de escena a cada punto, y se equilibro el punto de entrada para que no parecieses en mitad de una habitacion en vez de cerca de una puerta.
En este momento, se empieza a desarrollar un menu de pausa, que se abre al presionar la tecla escape y te permite reanudar el juego o salir al menu principal, el cual te permite empezar una partida nueva.
Terminado el cambio de escena ya totalmente funcional y sin "bugs" se procedio a añadir detalle a el combate, incluyendo una barra que indica nuestra vida de forma visual aparte de numerica (esto se hizo con ayuda de las funciones graficas de Unity aparte de con un archivo parecido al del control de hablar con personajes), aparte tambien se añadio que el personaje al dañar a enemigos, mostrase el daño que les inflige. Hubo varias iteraciones de dicho sistema.
Llegados a este punto, se pulio un poco mas el aspecto grafico, ya que habia algun que otro problema menor que no podiamos solucionar del todo con la superposicion de texturas y se arreglo un poco mejor.
Debido a que se acercaba el dia de la primera version funcional del programa, se investigo como hacer una "build" del juego para subirla a github (lo cual se hace dentro de el apartado de "build settings" donde podemos elegir para que plataforma y que añadir a la version del juego).
Llegado el dia de la primera version, a la hora de hacer la build dio un par de errores que se solucionaron rapidamente, pero se elimino un cartel donde al principio del juego te indicaban los controles basicos, por lo que tuvimos que indicarlos en github, actualmente se esta trabajando en volver a indicarlos dentro del juego, pero se esta a la espera de acabar el sistema de menus.
A dia de hoy se ha terminado una version funcional del administrador de sonido (controlado por script C#), que permite cambiar de musica segun donde estes (depende de la zona del escenario), sin errores. Ademas, se añadio a los enemigos y al personaje sonidos al atacar, de forma que el juego tiene un poco mas de vida.
Algunas de las canciones han tenido que ser editadas para dar mas calidad y quitar silencios y cosas asi (se ha utilizado una aplicacion aparte para la edicion de dicha musica y efectos de sonido).

Partes por revisar o en espera de confirmacion (del software):
Se esta pensando en si eliminar la parte de guardado de los aspectos finales del juego, ya que es un juego muy corto y carece de objetivo final todavia (se tiene pensado agregar un enemigo final). Aparte se requiere de retocar alguans cosas como el comportamiento de los aldeanos, ya que habria que animarlos para que no parezcan robots, ya que al moverse en cualquier direccion siguen mirando a una direccion fija, lo cual tiene un aspecto muy artificial. 
Aparte tambien hay que arreglar el que los npcs y mobs te puedan empujar. Esto, en ocasiones, causa que estos te empujen dentro de una casa y es algo molesto. Por ultimo, se querria dar algun toque decorativo y a ser posible mejorar los aspectos ya existentes, mas que crear otros nuevos, para que de una mayor sensacion de que es un juego pulido y de calidad. Y sin olvidarme de crear una opcion de subida de nivel, para dar una sensacion de avance.
En general es un proyecto bastante grande y no sabemos a dia de hoy si nos dara tiempo a acabar todo para la fecha final, aparte de eso tenemos que ver si el hardware se acaba desarrollando o quien se encarga de ello, debido a que todavia esta sin hacer y no se sabe si hay avances ni nada.

Avances y arreglos:
-Creado una opcion de subida de nivel, que aumenta tu vida maxima y daño, los enemigos ahora dan experiencia (cada uno una cantidad diferente definida por una variable publica). 
 Cada nivel requiere de una cantidad de experiencia distinta (definida por una cadena publica de numeros). 
 Incluye una estadistica nueva para la defensa, pero esta por pensar como implementarla sin hacer que esto haga que los enemigos hagan poco daño.
-Se ha animado a los aldeanos y creado prefabricables de estos mismos de forma que resulte mas rapido crearlos en el futuro.
-Arreglado un bug que hacia que el personaje aumentase de tamaño al cambiar de escenas y al empezar partida.
-Arreglado un error que salia en la consola de unity que indicaba que en el menu principal habia varios elementos que escuchaban sonido al mismo tiempo.

Parte de Hardware:
Se ha decidido que lo mejor es crear un mando con los botones necesarios para controlar el juego, y aparte se necesitara el raton para los menus (esto no esta planeado construirlo). 
Dicha parte esta todavia en desarrollo, no se sabe como va el progreso todavia, pero se espera que este para la fecha de entrega. Va a ser una placa arduino con siete teclas con cada uno una funcion dentro del juego.

Comentario:
Como la distribucion del trabajo se ha hecho por apartados, ya que a algunos no les iba unity, y otros no podian acceder ya que hay un numero limitado de personas que unity deja (de forma gratuita) acceder al proyecto, no tengo toda la informacion sobre los aspectos de diseño de cada elemento. Se ira escribiendo mas sobre el aspecto de diseño segun se progrese. Tambien se añadira alguna captura de pantalla sobre el entorno y las herramientas utilizadas.
