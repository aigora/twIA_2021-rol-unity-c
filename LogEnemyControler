using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.SceneManagement;

public class TreantController : MonoBehaviour
{

    /*  public float moveSpeed;

      private Rigidbody2D myRigidBody;

      private bool moving;

      public float timeBetweenMove;
      private float timeBetweenMoveCounter;

      public float timeToMove;
      private float timeToMoveCounter;

      private Vector3 moveDirection;

      public float waitToReload;
      private bool reloading;
      private GameObject thePlayer; */


    public Transform initialPosition;
    private Animator myAnim;
    private Transform target;
    [SerializeField]
    private float speed;
    [SerializeField]
    private float maxRange;
    [SerializeField]
    private float minRange;

    void Start()
    {
        /*   myRigidBody = GetComponent<Rigidbody2D>();

           // timeBetweenMoveCounter = timeBetweenMove;
           // timeToMoveCounter = timeToMove;

           timeBetweenMoveCounter = Random.Range(timeBetweenMove * 0.75f, timeBetweenMove * 1.25f);
           timeToMoveCounter = Random.Range(timeToMove * 0.75f, timeBetweenMove * 1.25f); */

        myAnim = GetComponent<Animator>();
        target = FindObjectOfType<Movement>().transform;


    }

    // [System.Obsolete]
    void Update()
    {
        /* if (moving)
         {

             timeToMoveCounter -= Time.deltaTime;
             myRigidBody.velocity = moveDirection;

             if (timeToMoveCounter < 0f)
             {
                 moving = false;
                 // timeBetweenMoveCounter = timeBetweenMove;
                 timeBetweenMoveCounter = Random.Range(timeBetweenMove * 0.75f, timeBetweenMove * 1.25f);
             }

         }
         else
         {
             timeBetweenMoveCounter -= Time.deltaTime;
             myRigidBody.velocity = Vector2.zero;

             if (timeBetweenMoveCounter < 0f)
             {
                 moving = true;
                 // timeToMoveCounter = timeToMove;
                 timeToMoveCounter = Random.Range(timeToMove * 0.75f, timeToMove * 1.25f);

                 moveDirection = new Vector3(Random.Range(-1f, 1f) * moveSpeed, Random.Range(-1f, 1f) * moveSpeed);

             }
         }

         if (reloading)
         {
             waitToReload -= Time.deltaTime;
             if(waitToReload < 0)
             {
                 Application.LoadLevel(Application.loadedLevel);
                 thePlayer.SetActive(true);
             }
         } */

        if(Vector3.Distance(target.position, transform.position)<= maxRange && Vector3.Distance(target.position, transform.position)>= minRange)
        {
            FollowPlayer();
        }
        else if (Vector3.Distance(target.position, transform.position) >= maxRange)
        {
            ResetPosition();
        }

 



    }

    /*
    void OnCollisionEnter2D(Collision2D other)
    {
        if(other.gameObject.name == "Hero")
        {
            other.gameObject.SetActive(false);
            reloading = true;
            thePlayer = other.gameObject;
        }
        
    } */


    public void FollowPlayer()
    {
        myAnim.SetBool("isMoving", true);
        myAnim.SetFloat("moveX", (target.position.x - transform.position.x));
        myAnim.SetFloat("moveY", (target.position.y - transform.position.y));
        transform.position = Vector3.MoveTowards(transform.position, target.transform.position, speed * Time.deltaTime);

    }

    public void ResetPosition()

    {
        myAnim.SetFloat("moveX", (initialPosition.position.x - transform.position.x));
        myAnim.SetFloat("moveY", (initialPosition.position.y - transform.position.y));
        transform.position = Vector3.MoveTowards(transform.position, initialPosition.position, speed * Time.deltaTime);

        if (Vector3.Distance(transform.position, initialPosition.position)==0)
        {
            myAnim.SetBool("isMoving", false);
        }
    }

}
